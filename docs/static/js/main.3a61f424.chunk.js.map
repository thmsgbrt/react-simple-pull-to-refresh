{"version":3,"sources":["pull-to-refresh/index.js","commands/commands.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DIRECTION","isScrollable","element","direction","overflowType","getComputedStyle","overflowY","document","scrollingElement","isOverflowScrollable","DOWN","scrollTop","clientHeight","scrollHeight","UP","Error","styleInject","css","ref","insertAt","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","RefreshingContent","React","className","PullingContent","PullToRefresh","_a","_b","isPullable","_c","canFetchMore","onRefresh","onFetchMore","_d","refreshingContent","_e","pullingContent","children","_f","pullDownThreshold","_g","fetchMoreThreshold","_h","maxPullDownDistance","_j","resistance","backgroundColor","_k","containerRef","useRef","childrenRef","pullDownRef","fetchMoreRef","pullToRefreshThresholdBreached","fetchMoreTresholdBreached","isDragging","startY","currentY","useEffect","current","childrenEl","addEventListener","onTouchStart","passive","onTouchMove","window","onScroll","onEnd","body","removeEventListener","classList","contains","getScrollToBottomValue","add","then","initContainer","catch","scrollY","innerHeight","requestAnimationFrame","overflowX","transform","opacity","remove","e","MouseEvent","pageY","TouchEvent","touches","isTreeScrollable","parentElement","target","getBoundingClientRect","top","cancelable","preventDefault","yDistanceMoved","Math","min","toString","overflow","visibility","Commands","setCanFetchMore","setIsPullable","setFetchMoreThreshold","setPullDownThreshold","setMaxPullDownDistance","setResistance","onReset","display","flexDirection","onClick","id","checked","onChange","htmlFor","value","DEFAULT_VALUES","App","FAKE_LIST","useState","list","setList","getNewData","Promise","res","setTimeout","n","map","item","index","key","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a61f424.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useRef, useEffect } from 'react';\n\nvar DIRECTION;\r\n(function (DIRECTION) {\r\n    DIRECTION[DIRECTION[\"UP\"] = -1] = \"UP\";\r\n    DIRECTION[DIRECTION[\"DOWN\"] = 1] = \"DOWN\";\r\n})(DIRECTION || (DIRECTION = {}));\n\nfunction isOverflowScrollable(element) {\r\n    var overflowType = getComputedStyle(element).overflowY;\r\n    if (element === document.scrollingElement && overflowType === 'visible') {\r\n        return true;\r\n    }\r\n    if (overflowType !== 'scroll' && overflowType !== 'auto') {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isScrollable(element, direction) {\r\n    if (!isOverflowScrollable(element)) {\r\n        return false;\r\n    }\r\n    if (direction === DIRECTION.DOWN) {\r\n        var bottomScroll = element.scrollTop + element.clientHeight;\r\n        return bottomScroll < element.scrollHeight;\r\n    }\r\n    if (direction === DIRECTION.UP) {\r\n        return element.scrollTop > 0;\r\n    }\r\n    throw new Error('unsupported direction');\r\n}\r\n/**\r\n * Returns whether a given element or any of its ancestors (up to rootElement) is scrollable in a given direction.\r\n */\r\nfunction isTreeScrollable(element, direction) {\r\n    if (isScrollable(element, direction)) {\r\n        return true;\r\n    }\r\n    if (element.parentElement == null) {\r\n        return false;\r\n    }\r\n    return isTreeScrollable(element.parentElement, direction);\r\n}\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \".lds-ellipsis {\\n  display: inline-block;\\n  position: relative;\\n  width: 64px;\\n  height: 64px; }\\n\\n.lds-ellipsis div {\\n  position: absolute;\\n  top: 27px;\\n  width: 11px;\\n  height: 11px;\\n  border-radius: 50%;\\n  background: #363636;\\n  animation-timing-function: cubic-bezier(0, 1, 1, 0); }\\n\\n.lds-ellipsis div:nth-child(1) {\\n  left: 6px;\\n  animation: lds-ellipsis1 0.6s infinite; }\\n\\n.lds-ellipsis div:nth-child(2) {\\n  left: 6px;\\n  animation: lds-ellipsis2 0.6s infinite; }\\n\\n.lds-ellipsis div:nth-child(3) {\\n  left: 26px;\\n  animation: lds-ellipsis2 0.6s infinite; }\\n\\n.lds-ellipsis div:nth-child(4) {\\n  left: 45px;\\n  animation: lds-ellipsis3 0.6s infinite; }\\n\\n@keyframes lds-ellipsis1 {\\n  0% {\\n    transform: scale(0); }\\n  100% {\\n    transform: scale(1); } }\\n\\n@keyframes lds-ellipsis3 {\\n  0% {\\n    transform: scale(1); }\\n  100% {\\n    transform: scale(0); } }\\n\\n@keyframes lds-ellipsis2 {\\n  0% {\\n    transform: translate(0, 0); }\\n  100% {\\n    transform: translate(19px, 0); } }\\n\";\nstyleInject(css);\n\n// Source: https://loading.io/css/\r\nvar RefreshingContent = function () {\r\n    return (React.createElement(\"div\", { className: \"lds-ellipsis\" },\r\n        React.createElement(\"div\", null),\r\n        React.createElement(\"div\", null),\r\n        React.createElement(\"div\", null),\r\n        React.createElement(\"div\", null)));\r\n};\n\nvar PullingContent = function () {\r\n    return (React.createElement(\"div\", null,\r\n        React.createElement(\"p\", null, \"\\u21A7\\u00A0\\u00A0pull to refresh\\u00A0\\u00A0\\u21A7\")));\r\n};\n\nvar css$1 = \".ptr,\\n.ptr__children {\\n  height: 100%;\\n  width: 100%;\\n  overflow: hidden;\\n  -webkit-overflow-scrolling: touch;\\n  position: relative; }\\n\\n.ptr.ptr--fetch-more-treshold-breached .ptr__fetch-more {\\n  display: block; }\\n\\n.ptr__fetch-more {\\n  display: none; }\\n\\n/**\\r\\n  * Pull down transition \\r\\n  */\\n.ptr__children,\\n.ptr__pull-down {\\n  transition: transform 0.2s cubic-bezier(0, 0, 0.31, 1); }\\n\\n.ptr__pull-down {\\n  position: absolute;\\n  overflow: hidden;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  visibility: hidden; }\\n  .ptr__pull-down > div {\\n    display: none; }\\n\\n.ptr--dragging {\\n  /**\\r\\n    * Hide PullMore content is treshold breached\\r\\n    */\\n  /**\\r\\n    * Otherwize, display content\\r\\n    */ }\\n  .ptr--dragging.ptr--pull-down-treshold-breached .ptr__pull-down--pull-more {\\n    display: none; }\\n  .ptr--dragging .ptr__pull-down--pull-more {\\n    display: block; }\\n\\n.ptr--pull-down-treshold-breached {\\n  /**\\r\\n    * Force opacity to 1 is pull down trashold breached\\r\\n    */\\n  /**\\r\\n    * And display loader\\r\\n    */ }\\n  .ptr--pull-down-treshold-breached .ptr__pull-down {\\n    opacity: 1 !important; }\\n  .ptr--pull-down-treshold-breached .ptr__pull-down--loading {\\n    display: block; }\\n\\n.ptr__loader {\\n  margin: 0 auto;\\n  text-align: center; }\\n\";\nstyleInject(css$1);\n\nvar PullToRefresh = function (_a) {\r\n    var _b = _a.isPullable, isPullable = _b === void 0 ? true : _b, _c = _a.canFetchMore, canFetchMore = _c === void 0 ? false : _c, onRefresh = _a.onRefresh, onFetchMore = _a.onFetchMore, _d = _a.refreshingContent, refreshingContent = _d === void 0 ? React.createElement(RefreshingContent, null) : _d, _e = _a.pullingContent, pullingContent = _e === void 0 ? React.createElement(PullingContent, null) : _e, children = _a.children, _f = _a.pullDownThreshold, pullDownThreshold = _f === void 0 ? 67 : _f, _g = _a.fetchMoreThreshold, fetchMoreThreshold = _g === void 0 ? 100 : _g, _h = _a.maxPullDownDistance, maxPullDownDistance = _h === void 0 ? 95 : _h, // max distance to scroll to trigger refresh\r\n    _j = _a.resistance, // max distance to scroll to trigger refresh\r\n    resistance = _j === void 0 ? 1 : _j, backgroundColor = _a.backgroundColor, _k = _a.className, className = _k === void 0 ? '' : _k;\r\n    var containerRef = useRef(null);\r\n    var childrenRef = useRef(null);\r\n    var pullDownRef = useRef(null);\r\n    var fetchMoreRef = useRef(null);\r\n    var pullToRefreshThresholdBreached = false;\r\n    var fetchMoreTresholdBreached = false; // if true, fetchMore loader is displayed\r\n    var isDragging = false;\r\n    var startY = 0;\r\n    var currentY = 0;\r\n    useEffect(function () {\r\n        if (!isPullable || !childrenRef || !childrenRef.current)\r\n            return;\r\n        var childrenEl = childrenRef.current;\r\n        childrenEl.addEventListener('touchstart', onTouchStart, { passive: true });\r\n        childrenEl.addEventListener('mousedown', onTouchStart);\r\n        childrenEl.addEventListener('touchmove', onTouchMove, { passive: false });\r\n        childrenEl.addEventListener('mousemove', onTouchMove);\r\n        window.addEventListener('scroll', onScroll);\r\n        childrenEl.addEventListener('touchend', onEnd);\r\n        childrenEl.addEventListener('mouseup', onEnd);\r\n        document.body.addEventListener('mouseleave', onEnd);\r\n        return function () {\r\n            childrenEl.removeEventListener('touchstart', onTouchStart);\r\n            childrenEl.removeEventListener('mousedown', onTouchStart);\r\n            childrenEl.removeEventListener('touchmove', onTouchMove);\r\n            childrenEl.removeEventListener('mousemove', onTouchMove);\r\n            window.removeEventListener('scroll', onScroll);\r\n            childrenEl.removeEventListener('touchend', onEnd);\r\n            childrenEl.removeEventListener('mouseup', onEnd);\r\n            document.body.removeEventListener('mouseleave', onEnd);\r\n        };\r\n    }, [\r\n        children,\r\n        isPullable,\r\n        onRefresh,\r\n        pullDownThreshold,\r\n        maxPullDownDistance,\r\n        canFetchMore,\r\n        fetchMoreThreshold,\r\n    ]);\r\n    /**\r\n     * Check onMount / canFetchMore becomes true\r\n     *  if fetchMoreThreshold is already breached\r\n     */\r\n    useEffect(function () {\r\n        var _a;\r\n        /**\r\n         * Check if it is already in fetching more state\r\n         */\r\n        if (!((_a = containerRef) === null || _a === void 0 ? void 0 : _a.current))\r\n            return;\r\n        var isAlreadyFetchingMore = containerRef.current.classList.contains('ptr--fetch-more-treshold-breached');\r\n        if (isAlreadyFetchingMore)\r\n            return;\r\n        /**\r\n         * Proceed\r\n         */\r\n        if (canFetchMore && getScrollToBottomValue() < fetchMoreThreshold && onFetchMore) {\r\n            containerRef.current.classList.add('ptr--fetch-more-treshold-breached');\r\n            fetchMoreTresholdBreached = true;\r\n            onFetchMore().then(initContainer).catch(initContainer);\r\n        }\r\n    }, [canFetchMore, children]);\r\n    /**\r\n     * Returns distance to bottom of the container\r\n     */\r\n    var getScrollToBottomValue = function () {\r\n        if (!childrenRef || !childrenRef.current)\r\n            return -1;\r\n        var scrollTop = window.scrollY; // is the pixels hidden in top due to the scroll. With no scroll its value is 0.\r\n        var scrollHeight = childrenRef.current.scrollHeight; // is the pixels of the whole container\r\n        return scrollHeight - scrollTop - window.innerHeight;\r\n    };\r\n    var initContainer = function () {\r\n        requestAnimationFrame(function () {\r\n            /**\r\n             * Reset Styles\r\n             */\r\n            if (childrenRef.current) {\r\n                childrenRef.current.style.overflowX = 'hidden';\r\n                childrenRef.current.style.overflowY = 'auto';\r\n                childrenRef.current.style.transform = \"unset\";\r\n            }\r\n            if (pullDownRef.current) {\r\n                pullDownRef.current.style.opacity = '0';\r\n            }\r\n            if (containerRef.current) {\r\n                containerRef.current.classList.remove('ptr--pull-down-treshold-breached');\r\n                containerRef.current.classList.remove('ptr--dragging');\r\n                containerRef.current.classList.remove('ptr--fetch-more-treshold-breached');\r\n            }\r\n            if (pullToRefreshThresholdBreached)\r\n                pullToRefreshThresholdBreached = false;\r\n            if (fetchMoreTresholdBreached)\r\n                fetchMoreTresholdBreached = false;\r\n        });\r\n    };\r\n    var onTouchStart = function (e) {\r\n        isDragging = false;\r\n        if (e instanceof MouseEvent) {\r\n            startY = e.pageY;\r\n        }\r\n        if (window.TouchEvent && e instanceof TouchEvent) {\r\n            startY = e.touches[0].pageY;\r\n        }\r\n        currentY = startY;\r\n        // Check if element can be scrolled\r\n        if (e.type === 'touchstart' && isTreeScrollable(e.target, DIRECTION.UP)) {\r\n            return;\r\n        }\r\n        // Top non visible so cancel\r\n        if (childrenRef.current.getBoundingClientRect().top < 0) {\r\n            return;\r\n        }\r\n        isDragging = true;\r\n    };\r\n    var onTouchMove = function (e) {\r\n        if (!isDragging) {\r\n            return;\r\n        }\r\n        if (window.TouchEvent && e instanceof TouchEvent) {\r\n            currentY = e.touches[0].pageY;\r\n        }\r\n        else {\r\n            currentY = e.pageY;\r\n        }\r\n        containerRef.current.classList.add('ptr--dragging');\r\n        if (currentY < startY) {\r\n            isDragging = false;\r\n            return;\r\n        }\r\n        if (e.cancelable) {\r\n            e.preventDefault();\r\n        }\r\n        var yDistanceMoved = Math.min((currentY - startY) / resistance, maxPullDownDistance);\r\n        // Limit to trigger refresh has been breached\r\n        if (yDistanceMoved >= pullDownThreshold) {\r\n            isDragging = true;\r\n            pullToRefreshThresholdBreached = true;\r\n            containerRef.current.classList.remove('ptr--dragging');\r\n            containerRef.current.classList.add('ptr--pull-down-treshold-breached');\r\n        }\r\n        // maxPullDownDistance breached, stop the animation\r\n        if (yDistanceMoved >= maxPullDownDistance) {\r\n            return;\r\n        }\r\n        pullDownRef.current.style.opacity = ((yDistanceMoved) / 65).toString();\r\n        childrenRef.current.style.overflow = 'visible';\r\n        childrenRef.current.style.transform = \"translate(0px, \" + yDistanceMoved + \"px)\";\r\n        pullDownRef.current.style.visibility = 'visible';\r\n    };\r\n    var onScroll = function (e) {\r\n        /**\r\n         * Check if component has already called onFetchMore\r\n         */\r\n        if (fetchMoreTresholdBreached)\r\n            return;\r\n        /**\r\n         * Check if user breached fetchMoreThreshold\r\n         */\r\n        if (canFetchMore && getScrollToBottomValue() < fetchMoreThreshold && onFetchMore) {\r\n            fetchMoreTresholdBreached = true;\r\n            containerRef.current.classList.add('ptr--fetch-more-treshold-breached');\r\n            onFetchMore().then(initContainer).catch(initContainer);\r\n        }\r\n    };\r\n    var onEnd = function () {\r\n        isDragging = false;\r\n        startY = 0;\r\n        currentY = 0;\r\n        // Container has not been dragged enough, put it back to it's initial state\r\n        if (!pullToRefreshThresholdBreached) {\r\n            if (pullDownRef.current)\r\n                pullDownRef.current.style.visibility = 'hidden';\r\n            initContainer();\r\n            return;\r\n        }\r\n        if (childrenRef.current) {\r\n            childrenRef.current.style.overflow = 'visible';\r\n            childrenRef.current.style.transform = \"translate(0px, \" + pullDownThreshold + \"px)\";\r\n        }\r\n        onRefresh().then(initContainer).catch(initContainer);\r\n    };\r\n    return (React.createElement(\"div\", { className: \"ptr \" + className, style: { backgroundColor: backgroundColor }, ref: containerRef },\r\n        React.createElement(\"div\", { className: \"ptr__pull-down\", ref: pullDownRef },\r\n            React.createElement(\"div\", { className: \"ptr__loader ptr__pull-down--loading\" }, refreshingContent),\r\n            React.createElement(\"div\", { className: \"ptr__pull-down--pull-more\" }, pullingContent)),\r\n        React.createElement(\"div\", { className: \"ptr__children\", ref: childrenRef },\r\n            children,\r\n            React.createElement(\"div\", { className: \"ptr__fetch-more\", ref: fetchMoreRef },\r\n                React.createElement(\"div\", { className: \"ptr__loader ptr__fetch-more--loading\" }, refreshingContent)))));\r\n};\n\nexport default PullToRefresh;\n","import React from 'react';\r\nimport './commands.css';\r\n\r\ninterface Props {\r\n  canFetchMore: boolean;\r\n  isPullable: boolean;\r\n  fetchMoreThreshold: number;\r\n  pullDownThreshold: number;\r\n  maxPullDownDistance: number;\r\n  resistance: number;\r\n  setCanFetchMore: Function;\r\n  setIsPullable: Function;\r\n  setFetchMoreThreshold: Function;\r\n  setPullDownThreshold: Function;\r\n  setMaxPullDownDistance: Function;\r\n  setResistance: Function;\r\n  onReset: Function;\r\n}\r\n\r\nconst Commands = ({\r\n  canFetchMore,\r\n  isPullable,\r\n  setCanFetchMore,\r\n  setIsPullable,\r\n  setFetchMoreThreshold,\r\n  fetchMoreThreshold,\r\n  setPullDownThreshold,\r\n  pullDownThreshold,\r\n  setMaxPullDownDistance,\r\n  maxPullDownDistance,\r\n  resistance,\r\n  setResistance,\r\n  onReset,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"commands\">\r\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n        <div className=\"command__group\">\r\n          <button onClick={() => onReset()}>\r\n            <code>Reset values</code>\r\n          </button>\r\n        </div>\r\n        <div className=\"command__group\">\r\n          <input type=\"checkbox\" id=\"ptr\" checked={isPullable} onChange={() => setIsPullable()} />\r\n          <label htmlFor=\"ptr\">\r\n            <code>isPullable</code>\r\n          </label>\r\n        </div>\r\n        <div className=\"command__group\">\r\n          <input type=\"checkbox\" id=\"fetchMore\" checked={canFetchMore} onChange={() => setCanFetchMore()} />\r\n          <label htmlFor=\"fetchMore\">\r\n            <code>canFetchMore</code>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n        <div className=\"command__group\">\r\n          <input\r\n            type=\"number\"\r\n            id=\"fetchMoreTreshold\"\r\n            value={fetchMoreThreshold}\r\n            onChange={e => setFetchMoreThreshold(e.target.value)}\r\n          />\r\n          <label htmlFor=\"fetchMoreTreshold\">\r\n            <code>fetchMoreTreshold</code>\r\n          </label>\r\n        </div>\r\n        <div className=\"command__group\">\r\n          <input\r\n            type=\"number\"\r\n            id=\"pullDownThreshold\"\r\n            value={pullDownThreshold}\r\n            onChange={e => setPullDownThreshold(e.target.value)}\r\n          />\r\n          <label htmlFor=\"pullDownThreshold\">\r\n            <code>pullDownThreshold</code>\r\n          </label>\r\n        </div>\r\n        <div className=\"command__group\">\r\n          <input\r\n            type=\"number\"\r\n            id=\"maxPullDownDistance\"\r\n            value={maxPullDownDistance}\r\n            onChange={e => setMaxPullDownDistance(e.target.value)}\r\n          />\r\n          <label htmlFor=\"maxPullDownDistance\">\r\n            <code>maxPullDownDistance</code>\r\n          </label>\r\n        </div>\r\n        <div className=\"command__group\">\r\n          <input\r\n            type=\"number\"\r\n            id=\"resistance\"\r\n            value={resistance}\r\n            onChange={e => setResistance(e.target.value)}\r\n          />\r\n          <label htmlFor=\"maxPullDownDistance\">\r\n            <code>resistance</code>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Commands;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport PullToRefresh from './pull-to-refresh';\r\nimport Commands from './commands/commands';\r\n\r\nconst DEFAULT_VALUES = {\r\n  isPullable: true,\r\n  canFetchMore: false,\r\n  fetchMoreThreshold: 100,\r\n  pullDownThreshold: 67,\r\n  maxPullDownDistance: 95,\r\n  resistance: 1,\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  // prettier-ignore\r\n  const FAKE_LIST = ['foo','bar','baz','foo','foo','bar','baz','foo','foo','bar','baz','foo','foo','bar','baz'];\r\n  const [list, setList] = useState<string[]>(FAKE_LIST);\r\n  const [isPullable, setIsPullable] = useState<boolean>(DEFAULT_VALUES.isPullable);\r\n  const [canFetchMore, setCanFetchMore] = useState<boolean>(DEFAULT_VALUES.canFetchMore);\r\n  const [fetchMoreThreshold, setFetchMoreThreshold] = useState<number>(DEFAULT_VALUES.fetchMoreThreshold);\r\n  const [pullDownThreshold, setPullDownThreshold] = useState<number>(DEFAULT_VALUES.pullDownThreshold);\r\n  const [maxPullDownDistance, setMaxPullDownDistance] = useState<number>(DEFAULT_VALUES.maxPullDownDistance);\r\n  const [resistance, setResistance] = useState<number>(DEFAULT_VALUES.resistance);\r\n\r\n  const handleReset = (): void => {\r\n    setIsPullable(DEFAULT_VALUES.isPullable);\r\n    setCanFetchMore(DEFAULT_VALUES.canFetchMore);\r\n    setFetchMoreThreshold(DEFAULT_VALUES.fetchMoreThreshold);\r\n    setPullDownThreshold(DEFAULT_VALUES.pullDownThreshold);\r\n    setMaxPullDownDistance(DEFAULT_VALUES.maxPullDownDistance);\r\n    setResistance(DEFAULT_VALUES.resistance);\r\n  };\r\n\r\n  const getNewData = (): Promise<void> => {\r\n    return new Promise(res => {\r\n      setTimeout(() => {\r\n        res(setList([...list, ...FAKE_LIST]));\r\n      }, 1500);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-commands\">\r\n        <Commands\r\n          canFetchMore={canFetchMore}\r\n          setCanFetchMore={() => setCanFetchMore(!canFetchMore)}\r\n          isPullable={isPullable}\r\n          setIsPullable={() => setIsPullable(!isPullable)}\r\n          fetchMoreThreshold={fetchMoreThreshold}\r\n          setFetchMoreThreshold={(n: number) => setFetchMoreThreshold(n)}\r\n          pullDownThreshold={pullDownThreshold}\r\n          setPullDownThreshold={(n: number) => setPullDownThreshold(n)}\r\n          maxPullDownDistance={maxPullDownDistance}\r\n          setMaxPullDownDistance={(n: number) => setMaxPullDownDistance(n)}\r\n          resistance={resistance}\r\n          setResistance={(n: number) => setResistance(n)}\r\n          onReset={handleReset}\r\n        />\r\n      </div>\r\n      <div className=\"App-ptr\">\r\n        <PullToRefresh\r\n          onRefresh={getNewData}\r\n          canFetchMore={canFetchMore}\r\n          isPullable={isPullable}\r\n          onFetchMore={getNewData}\r\n          fetchMoreThreshold={fetchMoreThreshold}\r\n          pullDownThreshold={pullDownThreshold}\r\n          maxPullDownDistance={maxPullDownDistance}\r\n          pullingContent=\"\"\r\n          resistance={resistance}\r\n        >\r\n          <>\r\n            <header className=\"App-header\">\r\n              <h1>Demo App</h1>\r\n              <h2>Pull To Refresh</h2>\r\n            </header>\r\n            <div className=\"App-container\">\r\n              <ul>\r\n                {list.map((item: string, index: number) => (\r\n                  <li key={index}>\r\n                    {index + 1} - {item}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </>\r\n        </PullToRefresh>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}